# Code to test the Sprint Challenge
#
# Expected output:
# 1
# 4
# 5

10011001 # LDI R0,10
00000000
00001010
10011001 # LDI R1,20
00000001
00010100
10011001 # LDI R2,TEST1
00000010
00010011
10100000 # CMP R0,R1 === Line 9 -> should compare r0: 10 and r1: 20, FL_LT:4
00000000
00000001
01010001 # JEQ R2        Does not jump because R0 != R1  === Line 12 -> called with r2:19
00000010
10011001 # LDI R3,1 === Line 14 -> should be 
00000011
00000001
01000011 # PRN R3        Prints 1
00000011

# TEST1 (19):
10011001 # LDI R2,TEST2 === Line 19 -> set r2:32
00000010
00100000
10100000 # CMP R0,R1 === Line 22 -> compare r0:10 to r1:20, FL_LT:4
00000000
00000001
01010010 # JNE R2        Jumps because R0 != R1 === Line 25 -> should set PC to r2:32
00000010
10011001 # LDI R3,2
00000011
00000010
01000011 # PRN R3        Skipped--does not print
00000011

# TEST2 (32):
10011001 # LDI R1,10 === Line 32 -> sets r1:10
00000001
00001010
10011001 # LDI R2,TEST3 === Line 35 -> sets r2:48
00000010
00110000
10100000 # CMP R0,R1 === Line 38 -> compare r0:10 to r1:10, [FL_LT:4] && FL_EQ:1 should reset LT:0?
00000000
00000001
01010001 # JEQ R2        Jumps becuase R0 == R1 === Line 41 -> sets pc:r2:48
00000010
10011001 # LDI R3,3
00000011
00000011
01000011 # PRN R3        Skipped--does not print
00000011

# TEST3 (48):
10011001 # LDI R2,TEST4 === Line 48 -> LDI not called
00000010
00111101
10100000 # CMP R0,R1
00000000
00000001
01010010 # JNE R2        Does not jump because R0 == R1
00000010
10011001 # LDI R3,4
00000011
00000100
01000011 # PRN R3        Prints 4
00000011

# TEST4 (61):
10011001 # LDI R3,5
00000011
00000101
01000011 # PRN R3        Prints 5
00000011
10011001 # LDI R2,TEST5
00000010
01001001
01010000 # JMP R2        Jumps unconditionally
00000010
01000011 # PRN R3        Skipped-does not print
00000011

# TEST5 (73):
00000001 # HLT